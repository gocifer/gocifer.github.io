(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{479:function(s,a,l){"use strict";l.r(a);var n=l(6),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,l=s._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[l("h2",{attrs:{id:"删除-文件"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#删除-文件"}},[s._v("#")]),s._v(" 删除 ._ 文件")]),s._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("find . -type f -name '._*' -delete\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])]),l("h2",{attrs:{id:"合并转码-flv"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#合并转码-flv"}},[s._v("#")]),s._v(" 合并转码 flv")]),s._v(" "),l("blockquote",[l("p",[s._v("国内视频网站解析下载下来的视频会被分成很多个小片段，这个小片段有个特点编码格式通通都一模一样，也就说参数完全相同的，只不过被切割开来了而已； 如果用重新转码的方式来将这些零零散散的小视频重新转成一个完整......\n国内视频网站解析下载下来的视频会被分成很多个小片段，这个小片段有个特点编码格式通通都一模一样，也就说参数完全相同的，只不过被切割开来了而已；")])]),s._v(" "),l("p",[s._v("如果用重新转码的方式来将这些零零散散的小视频重新转成一个完整的视频这在 window 系统上耗费很多不必要的时间，因为这些视频参数是都相同的，我们只要将它首尾粘贴成一个整体就可以了；")]),s._v(" "),l("p",[s._v("这样将极大提高视频合并效率，不管优酷网络视频被切分成了多少个片段合成一个整体也就几秒钟的事情而已；")]),s._v(" "),l("p",[s._v("今天分享的用 ffmpeg 批量合并 flv 视频格式的过程是在 linux 系统当中运行的，也就是如下代码不适用 windows 系统；")]),s._v(" "),l("p",[s._v("这个教程例子合成的虽然是 flv 格式，其实合并其它格式也是一回事，没别的要求就一点音视频编码必须完全相同；")]),s._v(" "),l("p",[s._v("首先获取视频所在目录下的全部 flv 格式文件，并将它们输出成列表打印出来；")]),s._v(" "),l("p",[s._v("CD 切换到视频所在目录下")]),s._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("按照视频顺序改名\nmv     1.flv   01.flv\nmv     2.flv   02.flv\nmv     3.flv   03.flv\nmv     4.flv   04.flv\nmv     5.flv   05.flv\nmv     6.flv   06.flv\nmv     7.flv   07.flv\nmv     8.flv   08.flv\nmv     9.flv   09.flv\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br"),l("span",{staticClass:"line-number"},[s._v("6")]),l("br"),l("span",{staticClass:"line-number"},[s._v("7")]),l("br"),l("span",{staticClass:"line-number"},[s._v("8")]),l("br"),l("span",{staticClass:"line-number"},[s._v("9")]),l("br"),l("span",{staticClass:"line-number"},[s._v("10")]),l("br")])]),l("p",[s._v("bash 获取当前目录下的所有 flv 文件")]),s._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("for f in *.flv; do echo \"file '$f'\" >> mylist.txt; done\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])]),l("p",[s._v("打印输出列表至当前目录")]),s._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("printf \"file '%s'\\n\" *.flv > mylist.txt\n查看打印输出结果\n[root@vultr home]cat  mylist.txt\nfile '01.flv'\nfile '02.flv'\nfile '03.flv'\nfile '04.flv'\nfile '05.flv'\nfile '06.flv'\nfile '07.flv'\nfile '08.flv'\nfile '09.flv'\nfile '10.flv'\nfile '11.flv'\nfile '12.flv'\nfile '13.flv'\nfile '14.flv'\nfile '15.flv'\nfile '16.flv'\nfile '17.flv'\nfile '18.flv'\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br"),l("span",{staticClass:"line-number"},[s._v("6")]),l("br"),l("span",{staticClass:"line-number"},[s._v("7")]),l("br"),l("span",{staticClass:"line-number"},[s._v("8")]),l("br"),l("span",{staticClass:"line-number"},[s._v("9")]),l("br"),l("span",{staticClass:"line-number"},[s._v("10")]),l("br"),l("span",{staticClass:"line-number"},[s._v("11")]),l("br"),l("span",{staticClass:"line-number"},[s._v("12")]),l("br"),l("span",{staticClass:"line-number"},[s._v("13")]),l("br"),l("span",{staticClass:"line-number"},[s._v("14")]),l("br"),l("span",{staticClass:"line-number"},[s._v("15")]),l("br"),l("span",{staticClass:"line-number"},[s._v("16")]),l("br"),l("span",{staticClass:"line-number"},[s._v("17")]),l("br"),l("span",{staticClass:"line-number"},[s._v("18")]),l("br"),l("span",{staticClass:"line-number"},[s._v("19")]),l("br"),l("span",{staticClass:"line-number"},[s._v("20")]),l("br"),l("span",{staticClass:"line-number"},[s._v("21")]),l("br")])]),l("p",[s._v("开始批量合并 flv 视频")]),s._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("ffmpeg -f concat -i mylist.txt -c copy output.flv\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])]),l("p",[s._v("真的超简单的，两部曲轻松搞定，最主要的是速度快到吓尿；我这次合并的《罗逻辑思维》18 个 flv 视频片段，总计大小 678M，合并费时我估计五秒钟的样子就弄好了；")]),s._v(" "),l("h2",{attrs:{id:"flv转mp4"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flv转mp4"}},[s._v("#")]),s._v(" flv转mp4")]),s._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("ffmpeg -i input.flv output.mp4\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])]),l("p",[s._v("此过程需要对视频进行重新编码，会把视频编码为 h264，音频转码为 aac。")]),s._v(" "),l("p",[s._v("如果原来的文件使用编码是 h264  aac，所以转码的过程中 flv->mp4, 仅仅是容器改变了，编码方式几乎没有变化，这里就不需要对视频进行重新编码，仅仅需要对文件重新加以 MP4 容器即可")]),s._v(" "),l("p",[s._v("所以使用的代码为：")]),s._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("ffmpeg -i input.flv -vcodec copy -acodec copy output.mp4复制代码\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])]),l("p",[s._v("能够解决大部分计算资源，速度等同于拷贝文件")])])}),[],!1,null,null,null);a.default=e.exports}}]);