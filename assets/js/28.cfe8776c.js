(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{443:function(t,s,a){"use strict";a.r(s);var e=a(6),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"个人代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#个人代理"}},[t._v("#")]),t._v(" 个人代理")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("hosts，只能翻部分被 DNS 投毒的网站，而且随着 Google IP 被封禁得越来越多，已经很难翻了")])]),t._v(" "),a("li",[a("p",[t._v("第三方 DNS，作用同 hosts，有风险，可能被再劫持 HTTP 代理，主要风险是明文传输（试过在海外 VPS 直接搭")])]),t._v(" "),a("li",[a("p",[t._v("HTTP 代理，用来上百度没问题，一打开 Google 马上被封）")])]),t._v(" "),a("li",[a("p",[t._v("HTTPS 代理，比起 HTTP 代理，有了一层 SSL 加密，安全许多，但 SSL 其实并不适合用于翻墙，它并不是专用于混淆的协议，shadowsocks 作者 clowwindy 有一篇文章详细阐述了这个观点")])]),t._v(" "),a("li",[a("p",[t._v("Tor，P2P 方式，安全性高。但 GFW 会钓鱼，伪造成 Tor 客户端进入 Tor 网络（obfsproxy 可以应对）。本身网络传输速度不快，不好用")])]),t._v(" "),a("li",[a("p",[t._v("Latern 基本同上，就个人使用体验来说，速度太慢")])]),t._v(" "),a("li",[a("p",[t._v("GoAgent，基于 GAE，已经不再维护 GoProxy，GoAgent 的继任者，用于自己部署在 VPS 上")])]),t._v(" "),a("li",[a("p",[t._v("SSH，虽然传输安全，但握手阶段特征太明显，会被监控流量和连接数，所以基本只能用一小会儿，一般需要数小时重连一次。2012 年 GFW 加入 DPI 功能之后被封锁得更为严重了，一旦有 HTTP 流量传输就会被墙")])]),t._v(" "),a("li",[a("p",[t._v("VPN，工作在数据链路层，流量特征非常明显，出于商业上的考虑（大量在华跨国公司需要用到）所以才还能存活。但是自建的话，L2TP/PP2P/OpenVPN 基本没办法存活多久，只有 Cisco AnyConnect （服务端用开源的 ocserv）还可以用。VPN的很多协议也都有不同程度的封锁和波动，而且VPN主要还是用来作为网页之外的软件使用，所以价格一般比较高")])]),t._v(" "),a("li",[a("p",[t._v("Shadowsocks，这个名气够大了，不详述。如有需要，服务端建议部署shadowsocks-libev，相比其他语言的实现，这个版本开发更为活跃")])]),t._v(" "),a("li",[a("p",[t._v("ShadowsocksR是在SS的基础上二次开发的，和SS有协议上的区别但是在服务器允许的情况下是可以通用的(具体查看贩卖SS的地方)，SSR的作者有些丑闻，SS的作者也并不喜欢这个协议，但是确实和SS比起来服务器用的人多......")])]),t._v(" "),a("li",[a("p",[t._v("ShadowVPN, GoHop, SoftEther VPN，都是具有较为强大加密/混淆功能的 VPN 实现，其中 ShadowVPN 因为作者 clowwindy 被请喝茶而删除项目代码，GoHop 功能强大但暂时只支持 Linux，SoftEther VPN 使用不是很方便（而且已经能被 GFW 探测到，见参考链接 13），所以目前都不是很流行")])]),t._v(" "),a("li",[a("p",[t._v("V2Ray，支持多种代理协议的代理软件包，功能强大")])]),t._v(" "),a("li",[a("p",[t._v("LightSword，基于 Node.js 的 SOCKS5 代理 / Apple NE 服务器，有 Linux / iOS / OS X 客户端，其协议参考了 shadowsocks，性能一般，iOS 客户端也只支持全局代理，但聊胜于无")])]),t._v(" "),a("li",[a("p",[t._v("IPv6，据说 GFW 暂时还未能有效封禁 IPv6 地址，所以在教育网里还能通过 IPv6 访问 Google/Facebook 等。不过这个应该只是暂时的资料来源: 品葱 https://www.pin-cong.com/p/2577/")])]),t._v(" "),a("li",[a("p",[t._v("PAC的中文名是代理自动配置（英语：Proxy auto-config，简称PAC）是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。但是现在部分地区没法用")])])]),t._v(" "),a("h2",{attrs:{id:"vpn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vpn"}},[t._v("#")]),t._v(" VPN")]),t._v(" "),a("p",[t._v("VPN 和 SSH 哪个比较好，为什么 VPN 比 SSH 繁荣？中lookwatchsee的回答按原作者的话概括地说：首先，大家其实都是VPN，所谓的SSH可能是指SSL VPN，而其他的则是非SSL VPN，比如IPsec，L2TP和PPTP等等这类tunnel-based VPN。原作者的观点是，tunnel-based比SSL更底层能做更多的事情，而且速度更快；SSL的优点是更方便灵活。")]),t._v(" "),a("h2",{attrs:{id:"全局代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局代理"}},[t._v("#")]),t._v(" 全局代理")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://linuxaria.com/article/redirect-all-tcp-traffic-through-transparent-socks5-proxy-in-linux",target:"_blank",rel:"noopener noreferrer"}},[t._v("可以看这篇文章其中的iptables部分"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("其中iptables配置如下:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#!/bin/bash\n# Create new chain\niptables -t nat -N REDSOCKS\n \n# Ignore LANs and some other reserved addresses.\niptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN\niptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN\niptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN\niptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN\niptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN\niptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN\niptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN\niptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN\n \n# Anything else should be redirected to port 31338\niptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 31338\n \n# Any tcp connection made by `linuxaria' should be redirected, put your username here.\niptables -t nat -A OUTPUT -p tcp -m owner --uid-owner linuxaria -j REDSOCKS\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[t._v("此配置实现了把所有除本地局域网连接以外的TCP连接全部转发到 31338 端口, 显然你应该用代理软件提前监听这个端口, 当然也可以是其他任意指定的代理监听端口.")]),t._v(" "),a("p",[t._v("PS: 全局代理其实很不实用, 最好分应用代理, 至于你说的要让wget这些命令也使用代理的话, 用之前临时export下env就好了")]),t._v(" "),a("p",[t._v("比如我的代理是扔在192.168.100.100上面, 端口1080, 我要wget下 YouTube:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ export https_proxy=http://192.168.100.100:1080\n$ wget www.youtube.com\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("如果想撤销当前会话的http_proxy代理,使用")])]),t._v(" "),a("p",[a("code",[t._v("unset http_proxy")]),t._v("即可。")]),t._v(" "),a("ul",[a("li",[t._v("测试")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("curl ip.gs\ncurl ip.cn\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"terminator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terminator"}},[t._v("#")]),t._v(" Terminator")]),t._v(" "),a("ul",[a("li",[t._v("当前终端有效\n"),a("code",[t._v("export http_proxy=http://proxyAddress:port")])])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("把代理服务器地址写入shell配置文件.bashrc或者.zshrc")]),t._v(" "),a("p",[t._v("直接在.bashrc或者.zshrc添加下面内容")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export http_proxy=”http://localhost:port”\nexport https_proxy=”http://localhost:port”\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("以使用shadowsocks代理为例，ss的代理端口为1080,那么应该设置为")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export http_proxy=”http://127.0.0.1:1080”\nexport https_proxy=”http://127.0.0.1:1080”\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("在终端中执行"),a("code",[t._v("source ~/.bashrc")]),t._v(", 或者退出当前终端再起一个终端")]),t._v(" "),a("p",[t._v("这个办法的好处是把代理服务器永久保存了，下次就可以直接用")]),t._v(" "),a("p",[t._v("修改apt配置")]),t._v(" "),a("p",[a("code",[t._v("sudo vim /etc/apt/apt.conf")])]),t._v(" "),a("p",[t._v("在文件末尾加入下面这行")]),t._v(" "),a("p",[a("code",[t._v("Acquire::http::Proxy “http://proxyAddress:port”")])]),t._v(" "),a("h3",{attrs:{id:"git的代理设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git的代理设置"}},[t._v("#")]),t._v(" git的代理设置")]),t._v(" "),a("p",[t._v("因为在天朝，用git clone 下载 github上的仓库的时候，速度很慢，才几十k每秒，稍微大点的仓库，要等到猴年马月。")]),t._v(" "),a("p",[t._v("利用shadowsocks的socks5代理，配置好后明显加速。用下面两条命令配置好后，保持shadowsocks客户端开启就行了。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config --global http.proxy ‘socks5://127.0.0.1:1080’\ngit config --global https.proxy ‘socks5://127.0.0.1:1080’\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("(clone https://前缀的repo会走ss)")]),t._v(" "),a("p",[t._v("shadowsocks的本地端口默认是1080")]),t._v(" "),a("p",[t._v("删除代理")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config --global --unset http.proxy\ngit config --global --unset https.proxy\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config --unset http.proxy\ngit config --unset https.proxy\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("git@github.com走的是ssh协议，所以配置ssh代理")]),t._v(" "),a("p",[t._v("配置.ssh/config （确保安装了 NetCat）")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Host github.com bitbucket.org\n    ProxyCommand            nc -x 127.0.0.1:1080 %h %p\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"apt的代理配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apt的代理配置"}},[t._v("#")]),t._v(" apt的代理配置")]),t._v(" "),a("p",[a("code",[t._v("sudo vim /etc/apt/apt.conf")])]),t._v(" "),a("p",[t._v("在文件末尾加入下面这行")]),t._v(" "),a("p",[a("code",[t._v('Acquire::http::Proxy "http://proxyAddress:port"')])]),t._v(" "),a("p",[t._v("保存apt.conf文件即可。")]),t._v(" "),a("h3",{attrs:{id:"wget-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wget-proxy"}},[t._v("#")]),t._v(" wget_proxy")]),t._v(" "),a("ul",[a("li",[t._v("使用wget命令可以设置http代理\n　　"),a("code",[t._v("wget http://www.baidu.com/ -e use_proxy=yes -e http_proxy=yourproxy.com:port")]),t._v("\n　　下载https的文件就要其他的额外参数了。\n"),a("code",[t._v("wget --no-check-certificate https://www.google.com/ \\ -e use_proxy=yes -e https_proxy=yourproxy.com:port")]),t._v("##使用https_proxy才可以哟\n　　参数--no-check-certificate可以不检查服务器的证书。\n　　如果你觉得麻烦，可以对shell进行http proxy的代理设置：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("　　export http_porxy=yourproxy.com:port\n　　export https_proxy=yourproxy.com:port\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("这样其他的程序就可以通过这个代理进行网络访问了。\n　　如果wget不需要代理可以使用参数--no-proxy取消代理。")]),t._v(" "),a("ul",[a("li",[t._v("方法二，配置文件中设置\n　　在~/.wgetrc中设定代理")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("　　http_proxy = http://ip_or_domainname:80/\n　　ftp_proxy = http://ip_or_domainname:80/\n　　use_proxy = on\n　　wait = 15\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("然后直接wget http://ip/filename就ok了\n　\n　　这就是两种对wget进行代理下载设置的方法了，有遇到这种情况的用户，就选择自己喜欢的一种方法进行设置吧。")]),t._v(" "),a("h2",{attrs:{id:"vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vm"}},[t._v("#")]),t._v(" vm")]),t._v(" "),a("h3",{attrs:{id:"java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" java")]),t._v(" "),a("h3",{attrs:{id:"snap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snap"}},[t._v("#")]),t._v(" snap")]),t._v(" "),a("h4",{attrs:{id:"snap-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snap-store"}},[t._v("#")]),t._v(" snap store")]),t._v(" "),a("p",[t._v("设置 /etc/environment")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('export http_proxy="http://127.0.0.1:8119"\nexport https_proxy="http://127.0.0.1:8119"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"snap-core"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snap-core"}},[t._v("#")]),t._v(" snap core")]),t._v(" "),a("p",[t._v('snap set core proxy.http=""')])])}),[],!1,null,null,null);s.default=r.exports}}]);