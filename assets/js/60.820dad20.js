(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{638:function(e,t,a){"use strict";a.r(t);var n=a(4),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"chapter-2-basics-of-kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chapter-2-basics-of-kubernetes"}},[e._v("#")]),e._v(" Chapter 2: Basics of Kubernetes")]),e._v(" "),a("h2",{attrs:{id:"_2-1-introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-introduction"}},[e._v("#")]),e._v(" 2.1 Introduction")]),e._v(" "),a("div",{staticClass:"center-container"},[a("iframe",{attrs:{src:"https://drive.google.com/file/d/1v9yGGPjdUi5X28Ew5u3LDc1alGPls3b8/preview",width:"784",height:"441"}})]),a("h2",{attrs:{id:"_2-2-learing-objectives"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-learing-objectives"}},[e._v("#")]),e._v(" 2.2 Learing Objectives")]),e._v(" "),a("p",[e._v("By the end of this chapter, you should be able to:")]),e._v(" "),a("ul",[a("li",[e._v("Discuss Kubernetes.")]),e._v(" "),a("li",[e._v("Learn the basic Kubernetes terminology.")]),e._v(" "),a("li",[e._v("Discuss the configuration tools.")]),e._v(" "),a("li",[e._v("Learn what community resources are available.")])]),e._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{staticClass:"lazy",attrs:{alt:"Learning Objectives Icon","data-src":"/img/docimg/learning_objectives.png",loading:"lazy"}})])]),a("h2",{attrs:{id:"_2-3-what-is-kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-what-is-kubernetes"}},[e._v("#")]),e._v(" 2.3 What is kubernetes?")]),e._v(" "),a("p",[e._v("Running a container on a laptop is relatively simple. But, connecting containers across multiple hosts, scaling them, deploying applications without downtime, and service discovery among several aspects, can be difficult.")]),e._v(" "),a("p",[e._v("Kubernetes addresses those challenges from the start with a set of primitives and a powerful open and extensible API. The ability to add new objects and controllers allows easy customization for various production needs.")]),e._v(" "),a("p",[e._v("According to the kubernetes.io website, Kubernetes is:")]),e._v(" "),a("blockquote",[a("p",[a("em",[e._v('"an open-source system for automating deployment, scaling, and management of containerized applications".')])])]),e._v(" "),a("p",[e._v("A key aspect of Kubernetes is that it builds on 15 years of experience at Google in a project called "),a("strong",[e._v("borg")]),e._v(".")]),e._v(" "),a("p",[e._v("Google's infrastructure started reaching high scale before virtual machines became pervasive in the datacenter, and containers provided a fine-grained solution for packing clusters efficiently. Efficiency in using clusters and managing distributed applications has been at the core of Google challenges.")]),e._v(" "),a("p",[e._v("In Greek, "),a("strong",[e._v("κνβερνητης")]),e._v(" means "),a("em",[e._v("the Helmsman")]),e._v(", or pilot of the ship. Keeping with the maritime theme of Docker containers, Kubernetes is the pilot of a ship of containers.")]),e._v(" "),a("p",[e._v("Due to the difficulty in pronouncing the name, many will use a nickname, "),a("strong",[e._v("K8s")]),e._v(", as Kubernetes has eight letters. The nickname is said like "),a("strong",[e._v("Kate's")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"_2-4-components-of-kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-components-of-kubernetes"}},[e._v("#")]),e._v(" 2.4 Components of Kubernetes")]),e._v(" "),a("div",{staticClass:"center-container"},[a("img",{staticStyle:{zoom:"4%"},attrs:{src:"/img/docimg/kubernetes_logo_with_border.png",alt:"Kubernetes icon "}})]),a("p",[e._v("Deploying containers and using Kubernetes may require a change in the development and the system administration approach to deploying applications. In a traditional environment, an application (such as a web server) would be a monolithic application placed on a dedicated server. As the web traffic increases, the application would be tuned, and perhaps moved to bigger and bigger hardware. After a couple of years, a lot of customization may have been done in order to meet the current web traffic needs.")]),e._v(" "),a("p",[e._v("Instead of using a large server, Kubernetes approaches the same issue by deploying a large number of small web servers, or microservices. The server and client sides of the application expect that there are many possible agents available to respond to a request. It is also important that clients expect the server processes to die and be replaced, leading to a transient server deployment. Instead of a large Apache web server with many httpd daemons responding to page requests, there would be many nginx servers, each responding.")]),e._v(" "),a("p",[e._v("The transient nature of smaller services also allows for decoupling. Each aspect of the traditional application is replaced with a dedicated, but transient, microservice or agent. To join these agents, or their replacements together, we use services and API calls. A service ties traffic from one agent to another (for example, a frontend web server to a backend database) and handles new IP or other information, should either one die and be replaced.")]),e._v(" "),a("p",[e._v("Communication to, as well as internally, between components is API call-driven, which allows for flexibility. Configuration information is stored in a JSON format, but is most often written in YAML. Kubernetes agents convert the YAML to JSON prior to persistence to the database.")]),e._v(" "),a("p",[e._v("Kubernetes is written in Go Language, a portable language which is like a hybridization between C++, Python, and Java. Some claim it incorporates the best (while some claim the worst) parts of each.")]),e._v(" "),a("h2",{attrs:{id:"_2-5-challenges"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-challenges"}},[e._v("#")]),e._v(" 2.5 Challenges")]),e._v(" "),a("p",[e._v("Containers have seen a huge rejuvenation in the past few years. They provide a great way to package, ship, and run applications - that is the Docker motto.")]),e._v(" "),a("p",[e._v("The developer experience has been boosted tremendously thanks to containers. Containers, and Docker specifically, have empowered developers with ease of building container images, simplicity of sharing images via Docker registries, and providing a powerful user experience to manage containers.")]),e._v(" "),a("p",[e._v("However, managing containers at scale and architecting a distributed application based on microservices' principles is still challenging.")]),e._v(" "),a("p",[e._v("You first need a continuous integration pipeline to build your container images, test them, and verify them. Then, you need a cluster of machines acting as your base infrastructure on which to run your containers. You also need a system to launch your containers, and watch over them when things fail and self-heal. You must be able to perform rolling updates and rollbacks, and eventually tear down the resource when no longer needed.")]),e._v(" "),a("p",[e._v("All of these actions require flexible, scalable, and easy-to-use network and storage. As containers are launched on any worker node, the network must join the resource to other containers, while still keeping the traffic secure from others. We also need a storage structure which provides and keeps or recycles storage in a seamless manner.")]),e._v(" "),a("p",[e._v("One of the biggest challenges to adoption is the applications themselves, inside the container. They need to be written, or re-written, to be truly transient. If you were to deploy Chaos Monkey, which would terminate any containers, would your customers notice?")]),e._v(" "),a("h2",{attrs:{id:"_2-6-other-solutions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-other-solutions"}},[e._v("#")]),e._v(" 2.6 Other Solutions")]),e._v(" "),a("p",[e._v("Built on open source and easily extensible, Kubernetes is definitely a solution to manage containerized applications.")]),e._v(" "),a("p",[e._v("There are other solutions as well, including:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Solution")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Logo")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Docker Swarm is the Docker Inc. solution. It has been re-architected recently and is based on SwarmKit. It is embedded with the Docker Engine.")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("img",{staticClass:"lazy",attrs:{alt:"Docker Swarm logo","data-src":"/img/docimg/docker_swarm.png",loading:"lazy"}})])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Apache Mesos is a data center scheduler, which can run containers through the use of "),a("em",[e._v("frameworks")]),e._v(". Marathon is the framework that lets you orchestrate containers.")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("img",{staticClass:"lazy",attrs:{alt:"apache mesos logo","data-src":"/img/docimg/apache_mesos_logo.png",loading:"lazy"}})])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Nomad from HashiCorp, the makers of Vagrant and Consul, is another solution for managing containerized applications. Nomad schedules tasks defined in "),a("em",[e._v("Jobs")]),e._v(". It has a Docker driver which lets you define a running container as a task.")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("img",{staticClass:"lazy",attrs:{alt:"Nomad Logo","data-src":"/img/docimg/nomad_logo.png",loading:"lazy"}})])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Rancher is a container orchestrator-agnostic system, which provides a single pane of glass interface to managing applications. It supports Mesos, Swarm, Kubernetes.")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("img",{staticClass:"lazy",attrs:{alt:"rancher logo","data-src":"/img/docimg/rancher_logo.png",loading:"lazy"}})])])])]),e._v(" "),a("h2",{attrs:{id:"_2-7-the-borg-heritage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-the-borg-heritage"}},[e._v("#")]),e._v(" 2.7 The Borg Heritage")]),e._v(" "),a("p",[e._v("What primarily distinguishes Kubernetes from other systems is its heritage. Kubernetes is inspired by Borg - the internal system used by Google to manage its applications (e.g. Gmail, Apps, GCE).")]),e._v(" "),a("p",[e._v("With Google pouring the valuable lessons they learned from writing and operating Borg for over 15 years into Kubernetes, this makes Kubernetes a safe choice when having to decide on what system to use to manage containers. While a powerful tool, part of the current growth in Kubernetes is making it easier to work with and handle workloads not found in a Google data center.")]),e._v(" "),a("p",[e._v("To learn more about the ideas behind Kubernetes, you can read the "),a("a",{attrs:{href:"https://research.google/pubs/pub43438/",target:"_blank",rel:"noopener noreferrer"}},[a("em",[e._v("Large-scale cluster management at Google with Borg paper")]),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Borg has inspired current data center systems, as well as the underlying technologies used in container runtime today. Google contributed "),a("strong",[e._v("cgroups")]),e._v(" to the Linux kernel in 2007; it limits the resources used by collection of processes. Both "),a("strong",[e._v("cgroups")]),e._v(" and "),a("strong",[e._v("Linux namespaces")]),e._v(" are at the heart of containers today, including Docker.")]),e._v(" "),a("p",[e._v("Mesos was inspired by discussions with Google when Borg was still a secret. Indeed, Mesos builds a multi-level scheduler, which aims to better use a data center cluster.")]),e._v(" "),a("p",[e._v("The Cloud Foundry Foundation embraces the 12 factor application principles. These principles provide great guidance to build web applications that can scale easily, can be deployed in the cloud, and whose build is automated. Borg and Kubernetes address these principles as well.")]),e._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{staticClass:"lazy",attrs:{alt:"The Kubernetes Lineage","data-src":"/img/docimg/the_kubernetes_lineage.png",loading:"lazy"}})]),e._v(" "),a("p",[e._v("The Kubernetes Lineage (by "),a("em",[e._v("Chip Childers, Cloud Foundry Foundation")]),e._v(", retrieved from "),a("a",{attrs:{href:"https://www.slideshare.net/chipchilders/cloud-foundry-the-platform-for-forging-cloud-native-applications",target:"_blank",rel:"noopener noreferrer"}},[e._v("LinkedIn Slideshare"),a("OutboundLink")],1),e._v(")")])]),a("h2",{attrs:{id:"_2-8-kubernetes-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-kubernetes-architecture"}},[e._v("#")]),e._v(" 2.8 Kubernetes Architecture")]),e._v(" "),a("p",[e._v("To quickly demistify Kubernetes, let's have a look at the "),a("em",[e._v("Kubernetes Architecture")]),e._v(" graphic, which shows a high-level architecture diagram of the system components. Not all components are shown. Every node running a container would have "),a("strong",[e._v("kubelet")]),e._v(" and "),a("strong",[e._v("kube-proxy")]),e._v(", for example.")]),e._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{staticClass:"lazy",attrs:{alt:"Kubernetes Architecture","data-src":"/img/docimg/kubernetes_architecture.png",loading:"lazy"}})]),e._v(" "),a("p",[a("em",[e._v("Kubernetes Architecture")])])]),a("p",[e._v("In its simplest form, Kubernetes is made of a central manager (aka master) and some worker nodes, once called minions (we will see in a follow-on chapter how you can actually run everything on a single node for testing purposes). The manager runs an API server, a scheduler, various controllers and a storage system to keep the state of the cluster, container settings, and the networking configuration.")]),e._v(" "),a("p",[e._v("Kubernetes exposes an API via the API server. You can communicate with the API using a local client called "),a("strong",[e._v("kubectl")]),e._v(" or you can write your own client and use "),a("strong",[e._v("curl")]),e._v(" commands. The "),a("strong",[e._v("kube-scheduler")]),e._v(" is forwarded the requests for running containers coming to the API and finds a suitable node to run that container. Each node in the cluster runs two processes: a "),a("strong",[e._v("kubelet")]),e._v("and "),a("strong",[e._v("kube-proxy")]),e._v(". The "),a("strong",[e._v("kubelet")]),e._v(" receives requests to run the containers, manages any necessary resources and watches over them on the local node. "),a("strong",[e._v("kubelet")]),e._v(" interacts with the local container engine, which is Docker by default, but could be rkt or cri-o, which is growing in popularity.")]),e._v(" "),a("p",[e._v("The "),a("strong",[e._v("kube-proxy")]),e._v(" creates and manages networking rules to expose the container on the network.")]),e._v(" "),a("p",[e._v("Using an API-based communication scheme allows for non-Linux worker nodes and containers. Support for Windows Server 2019 was graduated to "),a("em",[e._v("Stable")]),e._v(" with the 1.14 release. Only Linux nodes can be master on a cluster.")])])}),[],!1,null,null,null);t.default=s.exports}}]);