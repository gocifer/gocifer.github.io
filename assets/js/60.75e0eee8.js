(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{474:function(e,v,_){"use strict";_.r(v);var a=_(6),n=Object(a.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"dnf命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dnf命令"}},[e._v("#")]),e._v(" dnf命令")]),e._v(" "),_("h1",{attrs:{id:"dnf"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dnf"}},[e._v("#")]),e._v(" DNF")]),e._v(" "),_("p",[e._v("[toc]")]),e._v(" "),_("h2",{attrs:{id:"添rpm-fusion"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#添rpm-fusion"}},[e._v("#")]),e._v(" 添RPM Fusion")]),e._v(" "),_("p",[e._v("（复制到终端中执行，输入 SU 密码以继续。）\n"),_("code",[e._v("su -c 'dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm'")])]),e._v(" "),_("h2",{attrs:{id:"添加-fzug-源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#添加-fzug-源"}},[e._v("#")]),e._v(" 添加 FZUG 源")]),e._v(" "),_("p",[e._v("Fedora 27 用户")]),e._v(" "),_("p",[_("code",[e._v("# dnf install https://repo.fdzh.org/FZUG/free/27/x86_64/noarch/fzug-release-27-0.2.noarch.rpm")])]),e._v(" "),_("p",[e._v("Fedora 26 用户：")]),e._v(" "),_("p",[_("code",[e._v("# dnf install https://repo.fdzh.org/FZUG/free/26/x86_64/fzug-release-26-0.2.noarch.rpm")])]),e._v(" "),_("p",[e._v("Fedora 25 用户：")]),e._v(" "),_("p",[_("code",[e._v("# dnf install https://repo.fdzh.org/FZUG/free/25/x86_64/fzug-release-25-0.1.noarch.rpm")])]),e._v(" "),_("p",[e._v("其他方法：")]),e._v(" "),_("p",[e._v("=="),_("code",[e._v("# dnf config-manager --add-repo=https://repo.fdzh.org/FZUG/FZUG.repo")]),e._v("==")]),e._v(" "),_("p",[e._v("或")]),e._v(" "),_("p",[_("code",[e._v("# wget https://repo.fdzh.org/FZUG/FZUG.repo -P /etc/yum.repos.d/")])]),e._v(" "),_("h2",{attrs:{id:"删除和更新软件库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除和更新软件库"}},[e._v("#")]),e._v(" 删除和更新软件库")]),e._v(" "),_("p",[_("code",[e._v("cd /etc/yum.repos.d")]),e._v("//选择适当的软件库删除之\n"),_("code",[e._v("sudo dnf makecache")])]),e._v(" "),_("h2",{attrs:{id:"sim"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sim"}},[e._v("#")]),e._v(" sim")]),e._v(" "),_("p",[e._v("Fedora 25 中使用 dnf 命令来管理软件（但是当你想要拿这个关键字扔到搜索引擎里来获取一些信息的时候，会出现相当多的无关信息。取名部又立功了。）\n为了加速软件包的下载速度，我们开启自动寻找最快下载镜像的功能。你可以使用下面的指令来打开对应的配置文件：")]),e._v(" "),_("p",[_("code",[e._v("sudo gedit /etc/dnf/dnf.conf")]),e._v("\n在 [main] 部分里面加入一行：")]),e._v(" "),_("p",[_("code",[e._v("fastestmirror=true")]),e._v("\n保存。然后使用下面的指令来刷新以便立即生效：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("sudo dnf clean al\nsudo dnf makecache\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("h2",{attrs:{id:"yum更换国内源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#yum更换国内源"}},[e._v("#")]),e._v(" yum更换国内源")]),e._v(" "),_("p",[e._v("1，进入yum源配置目录\n"),_("code",[e._v("cd /etc/yum.repos.d")])]),e._v(" "),_("p",[e._v("2，备份系统自带的yum源\n"),_("code",[e._v("mv CentOS-Base.repo CentOS-Base.repo.bk")]),e._v("\n下载163网易的yum源：")]),e._v(" "),_("p",[_("code",[e._v("wget http://mirrors.163.com/.help/CentOS7-Base-163.repo")])]),e._v(" "),_("p",[e._v("3，更新完yum源后，执行下边命令更新yum配置，使操作立即生效\n"),_("code",[e._v("yum makecache")])]),e._v(" "),_("h2",{attrs:{id:"安装-dnf-包管理器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安装-dnf-包管理器"}},[e._v("#")]),e._v(" 安装 DNF 包管理器")]),e._v(" "),_("blockquote",[_("p",[e._v("DNF包管理器克服了YUM包管理器的一些瓶颈，提升了包括用户体验，内存占用，依赖分析，运行速度等多方面的内容。DNF使用 RPM, libsolv 和 hawkey 库进行包管理操作。尽管它没有预装在 CentOS 和 RHEL 7 中，但你可以在使用 YUM 的同时使用 DNF 。你可以在这里获得关于 DNF 的更多知识：《 DNF 代替 YUM ，你所不知道的缘由》")])]),e._v(" "),_("p",[e._v("DNF 并未默认安装在 RHEL 或 CentOS 7系统中，但是 Fedora 22 已经默认使用 DNF .")]),e._v(" "),_("ol",[_("li",[e._v("为了安装 DNF ，您必须先安装并启用 epel-release 依赖。")])]),e._v(" "),_("p",[e._v("在系统中执行以下命令：")]),e._v(" "),_("p",[_("code",[e._v("# yum install epel-release")])]),e._v(" "),_("p",[e._v("或者")]),e._v(" "),_("p",[_("code",[e._v("# yum install epel-release -y")])]),e._v(" "),_("p",[e._v("其实这里并没有强制使用”-y”的理由，相反的，在不使用”-y”的情况下，用户可以在安装过程中查看到底有哪些东西被安装进了系统。但对于没有这个需求的用户，您可以在 YUM 中使用”-y”参数来自动安装所有东西。")]),e._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[e._v("使用 epel-release 依赖中的 YUM 命令来安装 DNF 包。在系统中执行以下命令：")])]),e._v(" "),_("p",[_("code",[e._v("# yum install dnf")])]),e._v(" "),_("p",[e._v("然后， DNF 包管理器就被成功的安装到你的系统中了。接下来，是时候开始我们的教程了！在这个教程中，您将会学到27个用于 DNF 包管理器的命令。使用这些命令，你可以方便有效的管理您系统中的 RPM 软件包。现在，让我们开始学习 DNF 包管理器的27条常用命令吧！")]),e._v(" "),_("h2",{attrs:{id:"dnf命令-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dnf命令-2"}},[e._v("#")]),e._v(" dnf命令")]),e._v(" "),_("p",[_("strong",[e._v("查看 DNF 包管理器版本")])]),e._v(" "),_("p",[e._v("用处：该命令用于查看安装在您系统中的 DNF 包管理器的版本")]),e._v(" "),_("p",[_("code",[e._v("# dnf –version")])]),e._v(" "),_("p",[e._v("Check-DNF-Version")]),e._v(" "),_("p",[_("strong",[e._v("查看系统中可用的 DNF 软件库")])]),e._v(" "),_("p",[e._v("用处：该命令用于显示系统中可用的 DNF 软件库")]),e._v(" "),_("p",[_("code",[e._v("# dnf repolist")])]),e._v(" "),_("p",[e._v("Check-All-Enabled-Repositories")]),e._v(" "),_("p",[_("strong",[e._v("查看系统中可用和不可用的所有的 DNF 软件库")])]),e._v(" "),_("p",[e._v("用处：该命令用于显示系统中可用和不可用的所有的 DNF 软件库")]),e._v(" "),_("p",[_("code",[e._v("# dnf repolist all")])]),e._v(" "),_("p",[_("strong",[e._v("列出所有 RPM 包")])]),e._v(" "),_("p",[e._v("用处：该命令用于列出用户系统上的所有来自软件库的可用软件包和所有已经安装在系统上的软件包")]),e._v(" "),_("p",[_("code",[e._v("# dnf list")])]),e._v(" "),_("p",[_("strong",[e._v("列出所有安装了的 RPM 包")])]),e._v(" "),_("p",[e._v("用处：该命令用于列出所有安装了的 RPM 包")]),e._v(" "),_("p",[_("code",[e._v("# dnf list installed")])]),e._v(" "),_("p",[_("strong",[e._v("列出所有可供安装的 RPM 包")])]),e._v(" "),_("p",[e._v("用处：该命令用于列出来自所有可用软件库的可供安装的软件包")]),e._v(" "),_("p",[_("code",[e._v("# dnf list available")])]),e._v(" "),_("p",[_("strong",[e._v("搜索软件库中的 RPM 包")])]),e._v(" "),_("p",[e._v("用处：当你不知道你想要安装的软件的准确名称时，你可以用该命令来搜索软件包。你需要在”search”参数后面键入软件的部分名称来搜索。（在本例中我们使用”nano”）")]),e._v(" "),_("p",[_("code",[e._v("# dnf search nano")])]),e._v(" "),_("p",[_("strong",[e._v("查找某一文件的提供者")])]),e._v(" "),_("p",[e._v("用处：当你想要查看是哪个软件包提供了系统中的某一文件时，你可以使用这条命令。（在本例中，我们将查找”/bin/bash”这个文件的提供者）")]),e._v(" "),_("p",[_("code",[e._v("# dnf provides /bin/bash")])]),e._v(" "),_("p",[_("strong",[e._v("查看软件包详情")])]),e._v(" "),_("p",[e._v("用处：当你想在安装某一个软件包之前查看它的详细信息时，这条命令可以帮到你。（在本例中，我们将查看”nano”这一软件包的详细信息）")]),e._v(" "),_("p",[_("code",[e._v("# dnf info nano")])]),e._v(" "),_("p",[_("strong",[e._v("安装软件包")])]),e._v(" "),_("p",[e._v("用处：使用该命令，系统将会自动安装对应的软件及其所需的所有依赖（在本例中，我们将用该命令安装nano软件）")]),e._v(" "),_("p",[_("code",[e._v("# dnf install nano")])]),e._v(" "),_("p",[_("strong",[e._v("升级软件包")])]),e._v(" "),_("p",[e._v("用处：该命令用于升级制定软件包（在本例中，我们将用命令升级”systemd”这一软件包）")]),e._v(" "),_("p",[_("code",[e._v("# dnf update systemd")])]),e._v(" "),_("p",[_("strong",[e._v("检查系统软件包的更新")])]),e._v(" "),_("p",[e._v("用处：该命令用于检查系统中所有软件包的更新")]),e._v(" "),_("p",[_("code",[e._v("# dnf check-update")])]),e._v(" "),_("p",[_("strong",[e._v("升级所有系统软件包")])]),e._v(" "),_("p",[e._v("用处：该命令用于升级系统中所有有可用升级的软件包")]),e._v(" "),_("p",[_("code",[e._v("# dnf update 或 # dnf upgrade")])]),e._v(" "),_("p",[_("strong",[e._v("删除软件包")])]),e._v(" "),_("p",[e._v("用处：删除系统中指定的软件包（在本例中我们将使用命令删除”nano”这一软件包）")]),e._v(" "),_("p",[_("code",[e._v("# dnf remove nano 或 # dnf erase nano")])]),e._v(" "),_("p",[_("strong",[e._v("删除无用孤立的软件包")])]),e._v(" "),_("p",[e._v("用处：当没有软件再依赖它们时，某一些用于解决特定软件依赖的软件包将会变得没有存在的意义，该命令就是用来自动移除这些没用的孤立软件包。")]),e._v(" "),_("p",[_("code",[e._v("# dnf autoremove")])]),e._v(" "),_("p",[_("strong",[e._v("删除缓存的无用软件包")])]),e._v(" "),_("p",[e._v("用处：在使用 DNF 的过程中，会因为各种原因在系统中残留各种过时的文件和未完成的编译工程。我们可以使用该命令来删除这些没用的垃圾文件。")]),e._v(" "),_("p",[_("code",[e._v("# dnf clean all")])]),e._v(" "),_("p",[_("strong",[e._v("获取有关某条命令的使用帮助")])]),e._v(" "),_("p",[e._v("用处：该命令用于获取有关某条命令的使用帮助（包括可用于该命令的参数和该命令的用途说明）（本例中我们将使用命令获取有关命令”clean”的使用帮助）")]),e._v(" "),_("p",[_("code",[e._v("# dnf help clean")])]),e._v(" "),_("p",[_("strong",[e._v("查看所有的 DNF 命令及其用途")])]),e._v(" "),_("p",[e._v("用处：该命令用于列出所有的 DNF 命令及其用途")]),e._v(" "),_("p",[_("code",[e._v("# dnf help")])]),e._v(" "),_("p",[_("strong",[e._v("查看 DNF 命令的执行历史")])]),e._v(" "),_("p",[e._v("用处：您可以使用该命令来查看您系统上 DNF 命令的执行历史。通过这个手段您可以知道在自您使用 DNF 开始有什么软件被安装和卸载。")]),e._v(" "),_("p",[_("code",[e._v("# dnf history")])]),e._v(" "),_("p",[_("strong",[e._v("查看所有的软件包组")])]),e._v(" "),_("p",[e._v("用处：该命令用于列出所有的软件包组")]),e._v(" "),_("p",[_("code",[e._v("# dnf grouplist")])]),e._v(" "),_("p",[_("strong",[e._v("安装一个软件包组")])]),e._v(" "),_("p",[e._v("用处：该命令用于安装一个软件包组（本例中，我们将用命令安装”Educational Software”这个软件包组）")]),e._v(" "),_("p",[_("code",[e._v("# dnf groupinstall ‘Educational Software’")])]),e._v(" "),_("p",[_("strong",[e._v("升级一个软件包组中的软件包")])]),e._v(" "),_("p",[e._v("用处：该命令用于升级一个软件包组中的软件包（本例中，我们将用命令升级”Educational Software”这个软件包组中的软件）")]),e._v(" "),_("p",[_("code",[e._v("# dnf groupupdate ‘Educational Software’")])]),e._v(" "),_("p",[_("strong",[e._v("删除一个软件包组")])]),e._v(" "),_("p",[e._v("用处：该命令用于删除一个软件包组（本例中，我们将用命令删除”Educational Software”这个软件包组）")]),e._v(" "),_("p",[_("code",[e._v("# dnf groupremove ‘Educational Software’")])]),e._v(" "),_("p",[_("strong",[e._v("从特定的软件包库安装特定的软件")])]),e._v(" "),_("p",[e._v("用处：该命令用于从特定的软件包库安装特定的软件（本例中我们将使用命令从软件包库 epel 中安装 phpmyadmin 软件包）")]),e._v(" "),_("p",[_("code",[e._v("# dnf –enablerepo=epel install phpmyadmin")])]),e._v(" "),_("p",[_("strong",[e._v("更新软件包到最新的稳定发行版")])]),e._v(" "),_("p",[e._v("用处：该命令可以通过所有可用的软件源将已经安装的所有软件包更新到最新的稳定发行版")]),e._v(" "),_("p",[_("code",[e._v("# dnf distro-sync")])]),e._v(" "),_("p",[_("strong",[e._v("重新安装特定软件包")])]),e._v(" "),_("p",[e._v("用处：该命令用于重新安装特定软件包（本例中，我们将使用命令重新安装”nano”这个软件包）")]),e._v(" "),_("p",[_("code",[e._v("# dnf reinstall nano")])]),e._v(" "),_("p",[_("strong",[e._v("回滚某个特定软件的版本")])]),e._v(" "),_("p",[e._v("用处：该命令用于降低特定软件包的版本（如果可能的话）（本例中，我们将使用命令降低”acpid”这个软件包的版本）")]),e._v(" "),_("p",[_("code",[e._v("# dnf downgrade acpid")])]),e._v(" "),_("p",[e._v("样例输出：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("Using metadata from Wed May 20 12:44:59 2015\nNo match for available package: acpid-2.0.19-5.el7.x86_64\nError: Nothing to do.\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br")])]),_("h1",{attrs:{id:"rpm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rpm"}},[e._v("#")]),e._v(" rpm")]),e._v(" "),_("h2",{attrs:{id:"安装卸载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安装卸载"}},[e._v("#")]),e._v(" 安装卸载")]),e._v(" "),_("blockquote",[_("p",[_("strong",[_("code",[e._v("rpm -ivh XXX.rpm")])])])]),e._v(" "),_("blockquote",[_("p",[_("strong",[_("code",[e._v("yum intall -y XXX.rpm")])]),e._v("//会自动检测并且安装依赖包")])]),e._v(" "),_("blockquote",[_("p",[e._v("rpm的安装分为两种方式：\n(1)一种是通过rpm命令管理方式进行安装\n(2)一种是通过yum在线安装方式，")])]),e._v(" "),_("p",[e._v("平时我们安装软件时一般是从Linux的系统光盘下进行rpm安装， 而安装之前我们先把系统盘挂载到本地电脑。如下图所示：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("mkdir XXX\nmount /dev/XX  XXX\ncd XXX\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br")])]),_("p",[e._v("Linux中RPM包的依赖问题\n挂载完光盘以后就可以进行下一步的安装了。下面就以安装一个mysql-connector-odbc连接管理工具为例\n通过报错信息可以看到只要我们解决了libodbcinst.so这个库文件的安装文件，只要把这个安装文件装入系统那么这个so库也就成功安装，本着这个思路")]),e._v(" "),_("p",[e._v("我们可以通rpmfind官网查询这个库的依赖文件下载并安装就可以了。")]),e._v(" "),_("p",[e._v("在rpm进行安装时如果缺少so库文件进入rpmfind官网查询下载相应包安装即可解决问题，如果是缺少某个安装文件也是下载安装，按照错误 提示做相应的操作就可以解决所有依赖问题。")]),e._v(" "),_("blockquote",[_("p",[e._v("在使用rpm安装下载的文件或者光盘中的文件时，要注意是使用包全名还是包名")])]),e._v(" "),_("blockquote",[_("p",[e._v("如果操作的包是没有安装过的软件包时，要使用全路径加包全名的方式")])]),e._v(" "),_("blockquote",[_("p",[e._v("(2)操作系统已经安装过的软件，使用包名即可，它会搜索/var/lib/rpm中的数据库。")])]),e._v(" "),_("h1",{attrs:{id:"内核"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内核"}},[e._v("#")]),e._v(" 内核")]),e._v(" "),_("h2",{attrs:{id:"更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[e._v("#")]),e._v(" 更新")]),e._v(" "),_("p",[e._v("Fedora 的更新频率很高，每次更新之后多少会产生一点垃圾。\n比如如何删除老版本的内核文件呢？网上多是一些手动删除的教程，其实系统已经自带了自动删除的工具了。\n但是你可能会发现，网上寻找的清理命令都是基于 yum 的，而最新的系统里面却使用 dnf 来管理，怎么办呢？\n输入 man yum2dnf，拉到最下面，你就会发现一些信息。")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("#删除三个版本之前的内核\ndnf remove $(dnf repoquery --installonly --latest-limit -3 -q)\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("p",[e._v("或者：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("sudo su\nrpm -qa| grep kernel\nrpm -q kernel\nsudo dnf/yum remove\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br")])])])}),[],!1,null,null,null);v.default=n.exports}}]);